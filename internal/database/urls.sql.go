// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: urls.sql

package database

import (
	"context"
)

const createURL = `-- name: CreateURL :one
INSERT INTO urls (url_id, original_url) VALUES ($1, $2) RETURNING id, created_at, url_id, original_url
`

type CreateURLParams struct {
	UrlID       string
	OriginalUrl string
}

func (q *Queries) CreateURL(ctx context.Context, arg CreateURLParams) (Url, error) {
	row := q.db.QueryRowContext(ctx, createURL, arg.UrlID, arg.OriginalUrl)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UrlID,
		&i.OriginalUrl,
	)
	return i, err
}

const deleteURL = `-- name: DeleteURL :one
DELETE FROM urls WHERE url_id = $1 RETURNING id, created_at, url_id, original_url
`

func (q *Queries) DeleteURL(ctx context.Context, urlID string) (Url, error) {
	row := q.db.QueryRowContext(ctx, deleteURL, urlID)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UrlID,
		&i.OriginalUrl,
	)
	return i, err
}

const getURL = `-- name: GetURL :one
SELECT id, created_at, url_id, original_url FROM urls WHERE url_id = $1
`

func (q *Queries) GetURL(ctx context.Context, urlID string) (Url, error) {
	row := q.db.QueryRowContext(ctx, getURL, urlID)
	var i Url
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UrlID,
		&i.OriginalUrl,
	)
	return i, err
}
